<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanmei.dao.user.UserDao">

    <select id="countUser" resultType="Integer">
        SELECT count(0)
        FROM sys_user u
        WHERE u.delete_status = '1'
    </select>

    <resultMap id="userMap" type="com.sanmei.util.model.One2Many">
        <id column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <result column="sex" property="sex"/>
        <result column="age" property="age"/>
        <result column="phone" property="phone"/>
        <result column="qq" property="qq"/>
        <result column="wechat" property="wechat"/>
        <result column="aera" property="aera"/>
        <result column="education" property="education"/>
        <result column="introducer" property="introducer"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="deleteStatus" property="deleteStatus"/>
        <collection property="permissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>
    <select id="listUser" resultMap="userMap">
        SELECT
        u.*,
        r.role_name roleName,
        CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
        SELECT
        id userId,
        username username,
        nickname nickname,
        role_id roleId,
        sex sex,
        age age,
        phone phone,
        qq qq,
        wechat wechat,
        aera aera,
        education education,
        introducer introducer,
        delete_status deleteStatus,
        DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
        DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
        FROM sys_user
        WHERE delete_status = '1'
        <if test="keywords !='' and keywords !=null">
            and
            (
            nickname like CONCAT('%', #{keywords}, '%') or
            username like CONCAT('%', #{keywords}, '%') or
            sex like CONCAT('%', #{keywords}, '%') or
            age like CONCAT('%', #{keywords}, '%') or
            phone like CONCAT('%', #{keywords}, '%') or
            qq like CONCAT('%', #{keywords}, '%') or
            wechat like CONCAT('%', #{keywords}, '%') or
            aera like CONCAT('%', #{keywords}, '%') or
            education like CONCAT('%', #{keywords}, '%') or
            introducer like CONCAT('%', #{keywords}, '%')
            )
        </if>
        <if test="roleId !='' and roleId !=null">
            and role_id = #{roleId}
        </if>
        ORDER BY id
        LIMIT #{offSet}, #{pageRow}
        ) u
        LEFT JOIN sys_role r ON r.id = u.roleId
        LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
        LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId
    </select>

    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='1'
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (username, password, nickname, role_id,
         sex,age,phone,education,qq,wechat,aera,introducer) VALUES
            (#{username}, #{password}, #{nickname}, #{roleId},
             #{sex}, #{age}, #{phone}, #{education}, #{qq}, #{wechat}, #{aera}, #{introducer})
    </insert>

    <update id="updateUser">
        UPDATE sys_user
        SET
        nickname = #{nickname}
        <if test="password !='' and password !=null">
            , password = #{password}
        </if>

        , role_id = #{roleId}
        , sex = #{sex}
        , age = #{age}
        , phone = #{phone}
        , education = #{education}
        , qq = #{qq}
        , wechat = #{wechat}
        , aera = #{aera}
        , introducer = #{introducer}
        , delete_status = #{deleteStatus}
        WHERE id = #{userId} and id != 10001
    </update>
    <resultMap id="roleMap" type="com.sanmei.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.sanmei.util.model.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    <select id="listRole" resultMap="roleMap">
        SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = '1'
        ORDER BY r.id, p.id
    </select>
    <resultMap id="permissionMap" type="com.sanmei.util.model.One2Many">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
        (role_name)
        VALUES (#{roleName})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <resultMap id="aRole" type="com.sanmei.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT
            r.id        roleId,
            r.role_name roleName,
            u.id        userId,
            p.id        permissionId
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

    <update id="removeRole">
        UPDATE sys_role
        SET
            delete_status = '2'
        WHERE id = #{roleId} and id !=1
    </update>
    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET
            delete_status = '2'
        WHERE role_id = #{roleId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        delete_status = '2'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="updateRoleName">
        UPDATE sys_role
        SET
            role_name = #{roleName}
        WHERE id = #{roleId}
    </update>
    <select id="queryExistUsername" resultType="int">
        select count(0)
         from sys_user
         WHERE username=#{username}
         AND delete_status='1';
    </select>

    <insert id="saveSysUser" parameterType="com.sanmei.util.model.sysUser.SysUser">
        insert into sys_user
        (real_name,
        username,
        password,
        nickname,
        role_id,
        delete_status,
        sex,
        age,
        phone,
        qq,
        wechat,
        aera,
        education,
        introducer,
        create_time,
        update_time)
        values(
        #{realName},
        #{userName},
        #{passWord},
        #{nickName},
        (select id from sys_role where role_name = #{roleName} limit 1),
       #{deleteStatus},
       #{sex} ,
       #{age},
       #{phone},
       #{qq},
       #{wechat},
       #{aera},
       #{education},
       #{introducer},
       #{createTime},
       #{updateTime}
        )
    </insert>
</mapper>